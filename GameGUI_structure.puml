@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "GameGUI",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1469023177 { 
   	label=GameGUI
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   GameGUI1469023177[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GameGUI</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   buttonConfirm: JButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   buttonFire: JButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   buttonPause: JButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   buttonResume: JButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   buttonStart: JButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   buttonStop: JButton [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   enemyNumber: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   fireX: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   fireXTF: JTextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   fireY: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   fireYTF: JTextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   isPaused: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   isStarted: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   playerNumber: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   playing: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   random: Random [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ship1: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ship2: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ship3: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ship4: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ship5: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   shipE1: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   shipE2: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   shipE3: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   shipE4: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   shipE5: JLabel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   shipList: JComboBox [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ enemyFire()</TD></TR>
<TR><TD ALIGN="LEFT" >+ enemyMotion()</TD></TR>
<TR><TD ALIGN="LEFT" >+ fireBoardXY()</TD></TR>
<TR><TD ALIGN="LEFT" >+ gameOver()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initGUI()</TD></TR>
<TR><TD ALIGN="LEFT" >+ playerFire()</TD></TR>
<TR><TD ALIGN="LEFT" >+ playingGame()</TD></TR>
<TR><TD ALIGN="LEFT" >+ putBnd()</TD></TR>
<TR><TD ALIGN="LEFT" >+ putButton()</TD></TR>
<TR><TD ALIGN="LEFT" >+ putEnemyShip()</TD></TR>
<TR><TD ALIGN="LEFT" >+ putLabel()</TD></TR>
<TR><TD ALIGN="LEFT" >+ putScoreLabel()</TD></TR>
<TR><TD ALIGN="LEFT" >+ putShip()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_2050667446 { 
   	label=Boundary
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Boundary2050667446[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Boundary</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   boundary: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   boundary1: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   boundary2: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   boundary3: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   boundary4: JPanel [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ putBoundary(x: JFrame)</TD></TR>
<TR><TD ALIGN="LEFT" >+ putBoundary1(x: JFrame)</TD></TR>
<TR><TD ALIGN="LEFT" >+ putBoundary2(x: JFrame)</TD></TR>
<TR><TD ALIGN="LEFT" >+ putBoundary3(x: JFrame)</TD></TR>
<TR><TD ALIGN="LEFT" >+ putBoundary4(x: JFrame)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_205689635 { 
   	label=PlayerShip
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   PlayerShip205689635[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PlayerShip</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   rand: Random [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ship1: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ship2: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ship3: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ship4: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ship5: JPanel [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ isEnemyHit(ship: JLabel, x: int, y: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ playerFirstMove(ship: JLabel)</TD></TR>
<TR><TD ALIGN="LEFT" >+ putPlayerShip(fr: JFrame, ship: JLabel, x: int, y: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeShip(fr: JFrame, ship: JLabel)</TD></TR>
<TR><TD ALIGN="LEFT" >+ xship(ship: JLabel): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ yship(ship: JLabel): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_325818516 { 
   	label=LabelCoordinate
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   LabelCoordinate325818516[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LabelCoordinate</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ PutNumberLabel(x: JFrame, i: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ putLabelSerial()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_79711858 { 
   	label=Score
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Score79711858[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Score</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   scoreEnemy: JPanel [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   scorePlayer: JPanel [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ putScore(fr: JFrame)</TD></TR>
<TR><TD ALIGN="LEFT" >+ situation(fr: JFrame, lb: JLabel, s: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_80818744 { 
   	label=Title
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Title80818744[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Title</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   title: JPanel [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ putTitle(fr: JFrame)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_953760196 { 
   	label=EnemyShip
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   EnemyShip953760196[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EnemyShip</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   rand: Random [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ enemyFirstMove(shipE: JLabel)</TD></TR>
<TR><TD ALIGN="LEFT" >+ isPlayerHit(ship: JLabel, x: int, y: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ moveEnemy(shipE: JLabel)</TD></TR>
<TR><TD ALIGN="LEFT" >+ putEnemyShip(fr: JFrame, shipE: JLabel, x: int, y: int)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
GameGUI1469023177 -> LabelCoordinate325818516[label="putLabel() -> putLabelSerial()"];
GameGUI1469023177 -> Title80818744[label="initGUI() -> putTitle()"];
    
}
@enduml